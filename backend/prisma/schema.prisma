// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
   previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Avatar String?
  isAdmin Boolean @default(false)
  department   Department?    @relation(fields: [departmentId], references: [id])
  departmentId Int?
  refreshToken RefreshToken?
  company   Company?    @relation(fields: [companyId], references: [id])
  companyId Int?
  permissions   Permissions?   @relation(fields: [permissionsID], references: [id])
  permissionsID Int?

}

model Company {
  id  Int      @id @default(autoincrement())
  cnpj String
  fantasyName String
  users User[]
  department Department[]
  permissions Permissions[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt    
}

model Department {
  id  Int      @id @default(autoincrement())
  name   String   @unique
  company   Company    @relation(fields: [companyId], references: [id])
  companyId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User[]
}

model RefreshToken {
  id Int      @id @default(autoincrement())
  expiresIn Int
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
}
model Permissions {
  id Int      @id @default(autoincrement())
  name String
  description String
  company   Company    @relation(fields: [companyId], references: [id])
  companyId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User[]
}



