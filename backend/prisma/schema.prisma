// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isAdmin Boolean @default(false)
  company Company[]
  refreshToken RefreshToken?
  appointmentParameters AppointmentParametersOnUsers?
  appointment Appointment[]
}

model Company {
  id  Int      @id @default(autoincrement())
  cpnj String
  fantasyName String
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt    
}


model RefreshToken {
  id Int      @id @default(autoincrement())
  expiresIn Int
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
}

model AppointmentParameters {
  id         Int                 @id @default(autoincrement())
  startMorningTime Int
  endMorningTime Int
  startAfterTime Int
  endAfterTime Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user AppointmentParametersOnUsers[]
 
}


model AppointmentParametersOnUsers {
  user   User    @relation(fields: [userId], references: [id])
  userId     Int 
  appointmentParameters   AppointmentParameters    @relation(fields: [appointmentParametersId], references: [id])
  appointmentParametersId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, appointmentParametersId])
}
model Appointment{
  id Int @id @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  start_date DateTime
  end_date DateTime
  isOpen Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}
